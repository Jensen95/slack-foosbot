// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Player {
  id          String      @id @default(cuid())
  initials    String
  channelId   String
  channel     Channel     @relation(fields: [channelId], references: [id], onDelete: Cascade)
  name        String?
  updatedAt   DateTime    @updatedAt
  wonMatches  Match[]     @relation("MatchWinner")
  lostMatches Match[]     @relation("MatchLooser")
  trueSkill   TrueSkill[]
  glicko2     Glicko2[]
  elo         Elo[]

  @@unique([initials, channelId])
}

model Match {
  id        String      @id @default(cuid())
  winnerId  String
  winner    Player      @relation("MatchWinner", fields: [winnerId], references: [id])
  looserId  String
  looser    Player      @relation("MatchLooser", fields: [looserId], references: [id])
  channelId String
  channel   Channel     @relation(fields: [channelId], references: [id], onDelete: Cascade)
  timestamp DateTime    @default(now())
  trueSkill TrueSkill[]
  glicko2   Glicko2[]
  elo       Elo[]
}

model Channel {
  id        String   @id
  teamId    String   @unique
  matches   Match[]
  players   Player[]
  updatedAt DateTime @updatedAt

  @@unique([id, teamId])
}

model TrueSkill {
  id        String   @id @default(cuid())
  mu        Decimal
  sigma     Decimal
  pi        Decimal
  tau       Decimal
  player    Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId  String
  timestamp DateTime @default(now())
  match     Match?    @relation(fields: [matchId], references: [id])
  matchId   String?
}

model Glicko2 {
  id        String   @id @default(cuid())
  rating    Decimal
  rd        Decimal
  vol       Decimal
  player    Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId  String
  timestamp DateTime @default(now())
  match     Match?    @relation(fields: [matchId], references: [id])
  matchId   String?
}

model Elo {
  id        String   @id @default(cuid())
  elo       Decimal
  player    Player   @relation(fields: [playerId], references: [id], onDelete: Cascade)
  playerId  String
  timestamp DateTime @default(now())
  match     Match?    @relation(fields: [matchId], references: [id])
  matchId   String?
}
